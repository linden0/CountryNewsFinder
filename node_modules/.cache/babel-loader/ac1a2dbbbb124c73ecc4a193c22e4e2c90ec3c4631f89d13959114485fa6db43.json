{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian\\\\Downloads\\\\home\\\\brian\\\\GDSC\\\\Winter 2023\\\\CountryNewsFinder\\\\src\\\\components\\\\api.js\",\n  _s = $RefreshSig$();\n// https://www.react-simple-maps.io/docs/getting-started/\n\nimport React, { useState } from 'react';\nimport './api.css';\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from 'react-simple-maps';\nimport { Tooltip as ReactTooltip } from 'react-tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://raw.githubusercontent.com/deldersveld/topojson/master/world-countries.json\";\nfunction API() {\n  _s();\n  const [content, setContent] = useState(\"\");\n  console.log(content);\n  console.log(ReactTooltip.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    \"data-tip\": \"\",\n    children: /*#__PURE__*/_jsxDEV(ReactTooltip, {\n      children: [content, /*#__PURE__*/_jsxDEV(ComposableMap, {\n        \"data-tip\": \"\",\n        geography: geoUrl,\n        children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n          zoom: 1,\n          children: [\" \", /*#__PURE__*/_jsxDEV(Geographies, {\n            geography: geoUrl,\n            children: _ref => {\n              let {\n                geographies\n              } = _ref;\n              return geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n                geography: geo,\n                onMouseEnter: () => {\n                  const {\n                    name\n                  } = geo.properties;\n                  setContent(`${name}`);\n                },\n                onMouseLeave: () => {\n                  setContent(\"\");\n                },\n                style: {\n                  hover: {\n                    fill: \"#F53\",\n                    outline: \"none\"\n                  }\n                }\n              }, geo.rsmKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 19\n              }, this));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(API, \"KPwtwb4lt1NZxOwnjhyyIoKb9lQ=\");\n_c = API;\nexport default API;\nvar _c;\n$RefreshReg$(_c, \"API\");","map":{"version":3,"names":["React","useState","ComposableMap","Geographies","Geography","ZoomableGroup","Tooltip","ReactTooltip","geoUrl","API","content","setContent","console","log","length","geographies","map","geo","name","properties","hover","fill","outline","rsmKey"],"sources":["C:/Users/brian/Downloads/home/brian/GDSC/Winter 2023/CountryNewsFinder/src/components/api.js"],"sourcesContent":["// https://www.react-simple-maps.io/docs/getting-started/\r\n\r\nimport React, { useState } from 'react';\r\nimport './api.css'\r\n\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  ZoomableGroup, \r\n} from 'react-simple-maps'\r\n\r\nimport { Tooltip as ReactTooltip} from 'react-tooltip';\r\n\r\nconst geoUrl =   \"https://raw.githubusercontent.com/deldersveld/topojson/master/world-countries.json\"\r\n\r\nfunction API() { \r\n  const [content, setContent] = useState(\"\");\r\n\r\n  console.log(content);\r\n  console.log(ReactTooltip.length)\r\n\r\n  return (\r\n    <div className=\"map\" data-tip=\"\">\r\n      <ReactTooltip>{content}\r\n      <ComposableMap data-tip=\"\" geography={geoUrl}>\r\n        <ZoomableGroup zoom={1}>{\" \"}\r\n          <Geographies geography={geoUrl}>\r\n              {({ geographies }) =>\r\n                geographies.map((geo) => (\r\n                  <Geography \r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    onMouseEnter={() => {\r\n                      const { name } = geo.properties;\r\n                      setContent(`${name}`);\r\n                    }}\r\n                    onMouseLeave={() =>{\r\n                      setContent(\"\");\r\n                    }}\r\n                    style={{\r\n                      hover: {\r\n                        fill: \"#F53\",\r\n                        outline: \"none\",\r\n                      },\r\n                    }}\r\n                  />\r\n                ))\r\n              }\r\n            </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n      </ReactTooltip>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default API;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAElB,SACEC,aAAa,EACbC,WAAW,EACXC,SAAS,EACTC,aAAa,QACR,mBAAmB;AAE1B,SAASC,OAAO,IAAIC,YAAY,QAAO,eAAe;AAAC;AAEvD,MAAMC,MAAM,GAAK,oFAAoF;AAErG,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CW,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;EACpBE,OAAO,CAACC,GAAG,CAACN,YAAY,CAACO,MAAM,CAAC;EAEhC,oBACE;IAAK,SAAS,EAAC,KAAK;IAAC,YAAS,EAAE;IAAA,uBAC9B,QAAC,YAAY;MAAA,WAAEJ,OAAO,eACtB,QAAC,aAAa;QAAC,YAAS,EAAE;QAAC,SAAS,EAAEF,MAAO;QAAA,uBAC3C,QAAC,aAAa;UAAC,IAAI,EAAE,CAAE;UAAA,WAAE,GAAG,eAC1B,QAAC,WAAW;YAAC,SAAS,EAAEA,MAAO;YAAA,UAC1B;cAAA,IAAC;gBAAEO;cAAY,CAAC;cAAA,OACfA,WAAW,CAACC,GAAG,CAAEC,GAAG,iBAClB,QAAC,SAAS;gBAER,SAAS,EAAEA,GAAI;gBACf,YAAY,EAAE,MAAM;kBAClB,MAAM;oBAAEC;kBAAK,CAAC,GAAGD,GAAG,CAACE,UAAU;kBAC/BR,UAAU,CAAE,GAAEO,IAAK,EAAC,CAAC;gBACvB,CAAE;gBACF,YAAY,EAAE,MAAK;kBACjBP,UAAU,CAAC,EAAE,CAAC;gBAChB,CAAE;gBACF,KAAK,EAAE;kBACLS,KAAK,EAAE;oBACLC,IAAI,EAAE,MAAM;oBACZC,OAAO,EAAE;kBACX;gBACF;cAAE,GAdGL,GAAG,CAACM,MAAM;gBAAA;gBAAA;gBAAA;cAAA,QAgBlB,CAAC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAEQ;QAAA;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACX;AAEV;AAAC,GAvCQd,GAAG;AAAA,KAAHA,GAAG;AAyCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}