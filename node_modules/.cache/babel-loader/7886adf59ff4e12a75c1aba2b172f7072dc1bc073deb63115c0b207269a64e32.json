{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian\\\\Downloads\\\\home\\\\brian\\\\GDSC\\\\Winter 2023\\\\CountryNewsFinder\\\\src\\\\components\\\\api.js\";\n// https://www.react-simple-maps.io/docs/getting-started/\n\nimport React, { useState } from 'react';\nimport './api.css';\nimport { ComposableMap, Geographies, Geography, Marker, Annotation, ZoomableGroup } from 'react-simple-maps';\nimport ReactTooltip from 'react-tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://raw.githubusercontent.com/deldersveld/topojson/master/world-countries.json\";\nfunction API() {\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    \"data-tip\": \"\",\n    geography: geoUrl,\n    children: _ref => {\n      let {\n        geographies\n      } = _ref;\n      return geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n        geography: geo\n      }, geo.rsmKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this));\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}\n_c = API;\nexport default API;\nvar _c;\n$RefreshReg$(_c, \"API\");","map":{"version":3,"names":["React","useState","ComposableMap","Geographies","Geography","Marker","Annotation","ZoomableGroup","ReactTooltip","geoUrl","API","geographies","map","geo","rsmKey"],"sources":["C:/Users/brian/Downloads/home/brian/GDSC/Winter 2023/CountryNewsFinder/src/components/api.js"],"sourcesContent":["// https://www.react-simple-maps.io/docs/getting-started/\r\n\r\nimport React, { useState } from 'react';\r\nimport './api.css'\r\n\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Marker,\r\n  Annotation,\r\n  ZoomableGroup, \r\n} from 'react-simple-maps'\r\n\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst geoUrl =   \"https://raw.githubusercontent.com/deldersveld/topojson/master/world-countries.json\"\r\n\r\nfunction API() { \r\n  return (\r\n      <ComposableMap data-tip=\"\" geography={geoUrl}>\r\n        {({ geographies }) =>\r\n          geographies.map((geo) => (\r\n            <Geography key={geo.rsmKey} geography={geo} />\r\n          ))\r\n        }\r\n      </ComposableMap>\r\n  );\r\n}\r\n\r\nexport default API;"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAElB,SACEC,aAAa,EACbC,WAAW,EACXC,SAAS,EACTC,MAAM,EACNC,UAAU,EACVC,aAAa,QACR,mBAAmB;AAE1B,OAAOC,YAAY,MAAM,eAAe;AAAC;AAEzC,MAAMC,MAAM,GAAK,oFAAoF;AAErG,SAASC,GAAG,GAAG;EACb,oBACI,QAAC,aAAa;IAAC,YAAS,EAAE;IAAC,SAAS,EAAED,MAAO;IAAA,UAC1C;MAAA,IAAC;QAAEE;MAAY,CAAC;MAAA,OACfA,WAAW,CAACC,GAAG,CAAEC,GAAG,iBAClB,QAAC,SAAS;QAAkB,SAAS,EAAEA;MAAI,GAA3BA,GAAG,CAACC,MAAM;QAAA;QAAA;QAAA;MAAA,QAC3B,CAAC;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAEU;AAEtB;AAAC,KAVQJ,GAAG;AAYZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}