{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian\\\\Downloads\\\\home\\\\brian\\\\GDSC\\\\Winter 2023\\\\CountryNewsFinder\\\\src\\\\components\\\\search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { AutoComplete, Select } from 'antd';\nimport \"./search.css\";\nimport Input from 'antd/es/input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = [{\n  value: \"Select a category\",\n  text: \"Select a category\"\n}, {\n  value: \"business\",\n  text: \"Business\"\n}, {\n  value: \"entertainment\",\n  text: \"Entertainment\"\n}, {\n  value: \"general\",\n  text: \"General\"\n}, {\n  value: \"health\",\n  text: \"Health\"\n}, {\n  value: \"science\",\n  text: \"Science\"\n}, {\n  value: \"sports\",\n  text: \"Sports\"\n}, {\n  value: \"technology\",\n  text: \"Technology\"\n}];\nconst countries = [{\n  key: \"Argentina\",\n  ISO: \"ar\"\n}, {\n  key: \"Austria\",\n  ISO: \"at\"\n}, {\n  key: \"Australia\",\n  ISO: \"au\"\n}, {\n  key: \"Belgium\",\n  ISO: \"be\"\n}, {\n  key: \"Bulgaria\",\n  ISO: \"bg\"\n}, {\n  key: \"Brazil\",\n  ISO: \"br\"\n}, {\n  key: \"Canada\",\n  ISO: \"ca\"\n}, {\n  key: \"Switzerland\",\n  ISO: \"ch\"\n}, {\n  key: \"China\",\n  ISO: \"cn\"\n}, {\n  key: \"Colombia\",\n  ISO: \"co\"\n}, {\n  key: \"Cuba\",\n  ISO: \"cu\"\n}, {\n  key: \"Czech Republic\",\n  ISO: \"cz\"\n}, {\n  key: \"Germany\",\n  ISO: \"de\"\n}, {\n  key: \"Egypt\",\n  ISO: \"eg\"\n}, {\n  key: \"France\",\n  ISO: \"fr\"\n}, {\n  key: \"United Kingdom\",\n  ISO: \"gb\"\n}, {\n  key: \"Greece\",\n  ISO: \"gr\"\n}, {\n  key: \"Hong Kong\",\n  ISO: \"hk\"\n}, {\n  key: \"Hungary\",\n  ISO: \"hu\"\n}, {\n  key: \"Indonesia\",\n  ISO: \"id\"\n}, {\n  key: \"Ireland\",\n  ISO: \"ie\"\n}, {\n  key: \"Israel\",\n  ISO: \"il\"\n}, {\n  key: \"India\",\n  ISO: \"in\"\n}, {\n  key: \"Italy\",\n  ISO: \"it\"\n}, {\n  key: \"Japan\",\n  ISO: \"jp\"\n}, {\n  key: \"South Korea\",\n  ISO: \"kr\"\n}, {\n  key: \"Lithuania\",\n  ISO: \"lt\"\n}, {\n  key: \"Latvia\",\n  ISO: \"lv\"\n}, {\n  key: \"Mexico\",\n  ISO: \"mx\"\n}, {\n  key: \"Malaysia\",\n  ISO: \"my\"\n}, {\n  key: \"Nigeria\",\n  ISO: \"ng\"\n}, {\n  key: \"Netherlands\",\n  ISO: \"nl\"\n}, {\n  key: \"Norway\",\n  ISO: \"no\"\n}, {\n  key: \"New Zealand\",\n  ISO: \"nz\"\n}, {\n  key: \"Philippines\",\n  ISO: \"ph\"\n}, {\n  key: \"Poland\",\n  ISO: \"pl\"\n}, {\n  key: \"Portugal\",\n  ISO: \"pt\"\n}, {\n  key: \"Romania\",\n  ISO: \"ro\"\n}, {\n  key: \"Serbia\",\n  ISO: \"rs\"\n}, {\n  key: \"Russia\",\n  ISO: \"ru\"\n}, {\n  key: \"Saudi Arabia\",\n  ISO: \"sa\"\n}, {\n  key: \"Sweden\",\n  ISO: \"se\"\n}, {\n  key: \"Singapore\",\n  ISO: \"sg\"\n}, {\n  key: \"Slovenia\",\n  ISO: \"si\"\n}, {\n  key: \"Slovakia\",\n  ISO: \"sk\"\n}, {\n  key: \"Thailand\",\n  ISO: \"th\"\n}, {\n  key: \"Turkey\",\n  ISO: \"tr\"\n}, {\n  key: \"Taiwan\",\n  ISO: \"tw\"\n}, {\n  key: \"Ukraine\",\n  ISO: \"ua\"\n}, {\n  key: \"United Arab Emirates\",\n  ISO: \"ae\"\n}, {\n  key: \"United States\",\n  ISO: \"us\"\n}, {\n  key: \"Venezuela\",\n  ISO: \"ve\"\n}, {\n  key: \"South Africa\",\n  ISO: \"za\"\n}];\nconst APIKEY = \"1ddefb4425654c06a39cd9dff53a36ff\";\nfunction Search() {\n  _s();\n  const [keyword, setKeyword] = useState(\"\");\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [articles, setArticles] = useState(null);\n  const location = useLocation();\n  useEffect(() => {\n    const country_selected = countries.find(country => country.key === location.state.name);\n    console.log(count_selected.key, location.state.name);\n    // setSelectedCountry(count_selected);\n  });\n\n  // const [selectedCountry, setSelectedCountry] = useState(count_selected.key);\n  // console.log(selectedCountry);\n\n  // use the ISO or key to then useState on that??? \n  // console.log(location.state.name);\n  // const [selectedCountry, setSelectedCountry] = useState(`${location.state.name}`);\n  // setSelectedCountry(location.state.name)\n\n  const handleKeywordChange = event => {\n    setKeyword(event.target.value);\n  };\n  const handleCountrySelect = value => {\n    const selected = countries.find(country => country.key === value);\n    setSelectedCountry(selected ? selected.ISO : \"\");\n  };\n  const handleCategorySelect = value => {\n    if (value === \"Select a category\") {\n      setSelectedCategory(null);\n    } else {\n      setSelectedCategory(value);\n    }\n  };\n  const utcToReadable = UTCtime => {\n    const date = new Date(UTCtime);\n    const readableDate = date.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\"\n    });\n    return readableDate;\n  };\n  const fetchNews = () => {\n    let APIBASE = \"https://newsapi.org/v2/top-headlines?\";\n    let APIURL = APIBASE;\n    let numParams = 0;\n    if (keyword) {\n      numParams += 1;\n    }\n    if (selectedCountry) {\n      numParams += 1;\n    }\n    if (selectedCategory) {\n      numParams += 1;\n    }\n    let countryInput = document.getElementById('countryInput').value;\n    if (numParams === 0 && !countryInput) {\n      setError(\"Please enter at least one parameter\");\n    } else if (numParams === 0 && countries.filter(country => country.key === countryInput).length === 0) {\n      setError(\"Please select a valid country or delete your input.\");\n    } else {\n      setError(\"\");\n      if (keyword) {\n        APIURL += \"&q=\" + keyword;\n      }\n      if (selectedCountry) {\n        APIURL += \"&country=\" + selectedCountry;\n      }\n      if (selectedCategory) {\n        APIURL += \"&category=\" + selectedCategory;\n      }\n      APIURL += \"&apiKey=\" + APIKEY;\n      APIURL = APIURL.substring(0, APIBASE.length) + APIURL.substring(APIBASE.length + 1);\n      fetch(APIURL).then(response => response.json()).then(data => {\n        setArticles(data.articles);\n      }).catch(error => {\n        console.error(error);\n        setError(\"Internal error 500\");\n      });\n    }\n  };\n  function handleClick(url) {\n    window.open(url, '_blank');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        className: \"input-bar\",\n        type: \"text\",\n        placeholder: \"Keywords\",\n        value: keyword,\n        onChange: handleKeywordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AutoComplete, {\n        placeholder: \"Countries\",\n        id: \"countryInput\",\n        filterOption: (inputValue, option) => option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1,\n        onSelect: handleCountrySelect,\n        onChange: handleCountrySelect,\n        className: \"input-bar\",\n        children: countries.map(country => /*#__PURE__*/_jsxDEV(AutoComplete.Option, {\n          value: country.key,\n          children: country.key\n        }, country.ISO, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: categories,\n        placeholder: \"Select a category\",\n        onChange: handleCategorySelect,\n        className: \"input-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-btn\",\n        onClick: fetchNews,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-data\",\n      children: !articles ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No Articles Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please enter at least one search parameter to search for articles. If no results show, you can loosen the search by removing parameters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: articles.map(article => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          onClick: () => handleClick(article.url),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: article.urlToImage,\n              className: \"card-img\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: article.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Posted \", utcToReadable(article.publishedAt)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: article.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 7\n  }, this);\n}\n_s(Search, \"qegGnw664zOKNzElADTpy4OAVV4=\", false, function () {\n  return [useLocation];\n});\n_c = Search;\n;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","AutoComplete","Select","Input","categories","value","text","countries","key","ISO","APIKEY","Search","keyword","setKeyword","selectedCountry","setSelectedCountry","selectedCategory","setSelectedCategory","error","setError","articles","setArticles","location","country_selected","find","country","state","name","console","log","count_selected","handleKeywordChange","event","target","handleCountrySelect","selected","handleCategorySelect","utcToReadable","UTCtime","date","Date","readableDate","toLocaleDateString","year","month","day","fetchNews","APIBASE","APIURL","numParams","countryInput","document","getElementById","filter","length","substring","fetch","then","response","json","data","catch","handleClick","url","window","open","inputValue","option","toUpperCase","indexOf","map","article","urlToImage","author","publishedAt","title"],"sources":["C:/Users/brian/Downloads/home/brian/GDSC/Winter 2023/CountryNewsFinder/src/components/search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { AutoComplete, Select } from 'antd';\r\nimport \"./search.css\";\r\nimport Input from 'antd/es/input/Input';\r\n\r\nconst categories = [\r\n    {value: \"Select a category\", text: \"Select a category\"},\r\n    {value: \"business\", text: \"Business\"},\r\n    {value: \"entertainment\", text: \"Entertainment\"},\r\n    {value: \"general\", text: \"General\"},\r\n    {value: \"health\", text: \"Health\"},\r\n    {value: \"science\", text: \"Science\"},\r\n    {value: \"sports\", text: \"Sports\"},\r\n    {value: \"technology\", text: \"Technology\"}\r\n  ];\r\n  \r\nconst countries = [\r\n    { key: \"Argentina\", ISO: \"ar\" },\r\n    { key: \"Austria\", ISO: \"at\" },\r\n    { key: \"Australia\", ISO: \"au\" },\r\n    { key: \"Belgium\", ISO: \"be\" },\r\n    { key: \"Bulgaria\", ISO: \"bg\" },\r\n    { key: \"Brazil\", ISO: \"br\" },\r\n    { key: \"Canada\", ISO: \"ca\" },\r\n    { key: \"Switzerland\", ISO: \"ch\" },\r\n    { key: \"China\", ISO: \"cn\" },\r\n    { key: \"Colombia\", ISO: \"co\" },\r\n    { key: \"Cuba\", ISO: \"cu\" },\r\n    { key: \"Czech Republic\", ISO: \"cz\" },\r\n    { key: \"Germany\", ISO: \"de\" },\r\n    { key: \"Egypt\", ISO: \"eg\" },\r\n    { key: \"France\", ISO: \"fr\" },\r\n    { key: \"United Kingdom\", ISO: \"gb\" },\r\n    { key: \"Greece\", ISO: \"gr\" },\r\n    { key: \"Hong Kong\", ISO: \"hk\" },\r\n    { key: \"Hungary\", ISO: \"hu\" },\r\n    { key: \"Indonesia\", ISO: \"id\" },\r\n    { key: \"Ireland\", ISO: \"ie\" },\r\n    { key: \"Israel\", ISO: \"il\" },\r\n    { key: \"India\", ISO: \"in\" },\r\n    { key: \"Italy\", ISO: \"it\" },\r\n    { key: \"Japan\", ISO: \"jp\" },\r\n    { key: \"South Korea\", ISO: \"kr\" },\r\n    { key: \"Lithuania\", ISO: \"lt\" },\r\n    { key: \"Latvia\", ISO: \"lv\" },\r\n    { key: \"Mexico\", ISO: \"mx\" },\r\n    { key: \"Malaysia\", ISO: \"my\" },\r\n    { key: \"Nigeria\", ISO: \"ng\" },\r\n    { key: \"Netherlands\", ISO: \"nl\" },\r\n    { key: \"Norway\", ISO: \"no\" },\r\n    { key: \"New Zealand\", ISO: \"nz\" },\r\n    { key: \"Philippines\", ISO: \"ph\" },\r\n    { key: \"Poland\", ISO: \"pl\" },\r\n    { key: \"Portugal\", ISO: \"pt\" },\r\n    { key: \"Romania\", ISO: \"ro\" },\r\n    { key: \"Serbia\", ISO: \"rs\" },\r\n    { key: \"Russia\", ISO: \"ru\" },\r\n    { key: \"Saudi Arabia\", ISO: \"sa\" },\r\n    { key: \"Sweden\", ISO: \"se\" },\r\n    { key: \"Singapore\", ISO: \"sg\" },\r\n    { key: \"Slovenia\", ISO: \"si\" },\r\n    { key: \"Slovakia\", ISO: \"sk\" },\r\n    { key: \"Thailand\", ISO: \"th\" },\r\n    { key: \"Turkey\", ISO: \"tr\" },\r\n    { key: \"Taiwan\", ISO: \"tw\" },\r\n    { key: \"Ukraine\", ISO: \"ua\" },\r\n    { key: \"United Arab Emirates\", ISO: \"ae\" },\r\n    { key: \"United States\", ISO: \"us\" },\r\n    { key: \"Venezuela\", ISO: \"ve\" },\r\n    { key: \"South Africa\", ISO: \"za\" },\r\n  ]\r\nconst APIKEY = \"1ddefb4425654c06a39cd9dff53a36ff\"\r\n\r\nfunction Search() {\r\n    const [keyword, setKeyword] = useState(\"\");\r\n    const [selectedCountry, setSelectedCountry] = useState(\"\");\r\n    const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [articles, setArticles] = useState(null);\r\n    const location  = useLocation();\r\n      \r\n    useEffect(() => {\r\n      const country_selected = countries.find((country) => country.key === location.state.name)\r\n      console.log(count_selected.key, location.state.name);\r\n      // setSelectedCountry(count_selected);\r\n    });\r\n\r\n    // const [selectedCountry, setSelectedCountry] = useState(count_selected.key);\r\n    // console.log(selectedCountry);\r\n    \r\n    // use the ISO or key to then useState on that??? \r\n    // console.log(location.state.name);\r\n    // const [selectedCountry, setSelectedCountry] = useState(`${location.state.name}`);\r\n    // setSelectedCountry(location.state.name)\r\n\r\n    const handleKeywordChange = (event) => {\r\n      setKeyword(event.target.value);\r\n    };\r\n  \r\n    const handleCountrySelect = (value) => {\r\n      const selected = countries.find((country) => country.key === value);\r\n      setSelectedCountry(selected ? selected.ISO : \"\");\r\n    };\r\n    \r\n    const handleCategorySelect = (value) => {\r\n      if (value === \"Select a category\") {\r\n        setSelectedCategory(null);\r\n      } else {\r\n        setSelectedCategory(value);\r\n      }\r\n    }\r\n\r\n    const utcToReadable = (UTCtime) => {\r\n      const date = new Date(UTCtime);\r\n      const readableDate = date.toLocaleDateString(\"en-US\", {\r\n        year: \"numeric\",\r\n        month: \"short\",\r\n        day: \"numeric\"\r\n      });\r\n      return readableDate;\r\n    }\r\n\r\n    const fetchNews = () => {\r\n        let APIBASE = \"https://newsapi.org/v2/top-headlines?\";\r\n        let APIURL = APIBASE;\r\n        let numParams = 0;\r\n        if (keyword) {numParams += 1}\r\n        if (selectedCountry) {numParams += 1}\r\n        if (selectedCategory) {numParams += 1}\r\n\r\n        let countryInput = document.getElementById('countryInput').value;\r\n        if (numParams === 0 && !countryInput) {\r\n          setError(\"Please enter at least one parameter\")\r\n        } else if (numParams === 0 && countries.filter(country => country.key===countryInput).length === 0) {\r\n          setError(\"Please select a valid country or delete your input.\");\r\n        } else {\r\n          setError(\"\");\r\n          if (keyword) { APIURL += \"&q=\" + keyword }\r\n          if (selectedCountry) { APIURL += \"&country=\" + selectedCountry }\r\n          if (selectedCategory) { APIURL += \"&category=\" + selectedCategory }\r\n          APIURL += \"&apiKey=\" + APIKEY\r\n          APIURL = APIURL.substring(0,APIBASE.length) + APIURL.substring(APIBASE.length+1)\r\n\r\n          fetch(APIURL)\r\n              .then((response) => response.json())\r\n              .then((data) => {\r\n                setArticles(data.articles);\r\n              })\r\n              .catch((error) => {\r\n                  console.error(error)\r\n                  setError(\"Internal error 500\");\r\n              });\r\n        }\r\n    }\r\n\r\n    function handleClick(url) {\r\n      window.open(url, '_blank');\r\n    }\r\n\r\n    return (\r\n      <div className='search-wrapper'>\r\n        <div className='search-bar'>\r\n          <Input\r\n            className='input-bar'\r\n            type=\"text\"\r\n            placeholder=\"Keywords\"\r\n            value={keyword}\r\n            onChange={handleKeywordChange}\r\n          />\r\n\r\n          <AutoComplete\r\n              placeholder=\"Countries\"\r\n              id=\"countryInput\"\r\n              filterOption={(inputValue, option) =>\r\n              option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n              }\r\n              onSelect={handleCountrySelect}\r\n              onChange={handleCountrySelect}\r\n              className='input-bar'\r\n          >\r\n          {countries.map((country) => (\r\n            <AutoComplete.Option key={country.ISO} value={country.key}>\r\n              {country.key}\r\n            </AutoComplete.Option>\r\n          ))}\r\n          </AutoComplete>\r\n\r\n          <Select\r\n              options={categories}\r\n              placeholder=\"Select a category\"\r\n              onChange={handleCategorySelect}\r\n              className=\"input-bar\"\r\n          />\r\n\r\n          <button className=\"submit-btn\" onClick={fetchNews}>Submit</button>\r\n        </div>\r\n        \r\n        { error && <div className='error'>{error}</div>}\r\n        <div className='news-data'>\r\n          {!articles ? (\r\n            <div>\r\n              <h1>No Articles Found</h1>\r\n              <p>Please enter at least one search parameter to search for articles. If no results show, you can loosen the search by removing parameters.</p>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {articles.map((article) => (\r\n                <div className='card' onClick={() => handleClick(article.url)}>\r\n\r\n                  <div className='card-image'>\r\n                    <img src={article.urlToImage} className='card-img' alt=''/>\r\n                  </div>\r\n\r\n                  <div className='card-info'>\r\n                    <p>{article.author}</p>\r\n                    <p>Posted {utcToReadable(article.publishedAt)}</p>\r\n                  </div>\r\n                  \r\n                  <h3>{article.title}</h3>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Search;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}